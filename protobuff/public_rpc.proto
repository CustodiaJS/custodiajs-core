syntax = "proto3";

package publicgrpc;
option go_package = "/grpc/publicgrpc;publicgrpc";

// Importiert, da Timestamp und Struct verwendet werden.
import "google/protobuf/timestamp.proto";
import "google/protobuf/struct.proto";

message RPCFunctionParameter {
  oneof value {
    string stringValue = 1;
    int64 int64Value = 2;
    uint64 uint64Value = 3;
    double floatValue = 4;
    bool booleanValue = 5;
    bytes bytesValue = 6;
    google.protobuf.Timestamp timestampValue = 7;
    google.protobuf.Struct objectValue = 8;
    ArrayValue arrayValue = 9;
  }
}

message ArrayValue {
  repeated RPCFunctionParameter values = 1;
}

message RPCFunctionCall {
  string containerId = 1;
  string functionName = 2;
  repeated RPCFunctionParameter parms = 3;
}

message RPCResponseData {
  oneof value {
    string stringValue = 1;
    int64 int64Value = 2;
    double floatValue = 3;
    bool booleanValue = 4;
    bytes bytesValue = 5;
    google.protobuf.Timestamp timestampValue = 6;
    google.protobuf.Struct objectValue = 7;
    ArrayValue arrayValue = 8;
  }
}

message RPCResponse {
  string result = 1;
  RPCResponseData data = 2;
  string error = 3; // Optional in gRPC. Leerlassen, wenn kein Fehler vorliegt.
}

service RPCService {
  rpc CallFunction (RPCFunctionCall) returns (RPCResponse) {}
}

service ChatService {
  rpc Chat(stream ChatMessage) returns (stream ChatMessage);
}

message ChatMessage {
  string user = 1;
  string message = 2;
}